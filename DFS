#include <stdio.h>
#include <stdlib.h>
#define MAX_NODES 10
struct Node
{
    int data;
    struct Node *next;
};
struct Graph
{
    int numNodes;
    struct Node *adjList[MAX_NODES];
    int visited[MAX_NODES];
};
void initGraph(struct Graph *graph, int numNodes)
{
    graph->numNodes = numNodes;
    for (int i = 0; i < numNodes; i++)
    {
        graph->adjList[i] = NULL;
        graph->visited[i] = 0;
    }
}
void addEdge(struct Graph *graph, int src, int dest)
{
    struct Node *newNode = (struct Node *)malloc(sizeof(struct Node));
    newNode->data = dest;
    newNode->next = graph->adjList[src];
    graph->adjList[src] = newNode;
}
void DFS(struct Graph *graph, int startNode)
{
    graph->visited[startNode] = 1;
    printf("Visited node: %d\n", startNode);
    struct Node *current = graph->adjList[startNode];
    while (current != NULL)
    {
        if (!graph->visited[current->data])
        {
            DFS(graph, current->data);
        }
        current = current->next;
    }
}
int main()
{
    struct Graph graph;
    initGraph(&graph, 6);
    addEdge(&graph, 0, 1);
    addEdge(&graph, 0, 2);
    addEdge(&graph, 1, 3);
    addEdge(&graph, 1, 4);
    addEdge(&graph, 2, 5);

    printf("Depth First Search:\n");
    DFS(&graph, 0);

    return 0;
}
