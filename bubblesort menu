#include <stdio.h>
#include <stdlib.h>
#include <string.h>

// Structure to represent a student
struct Student {
    int rollNumber;
    char name[50];
    float percentage;
};

// Function to perform Bubble Sort on the student database based on percentage
void bubbleSort(struct Student students[], int n) {
    for (int i = 0; i < n - 1; i++) {
        for (int j = 0; j < n - i - 1; j++) {
            if (students[j].percentage < students[j + 1].percentage) {
                // Swap the students if they are out of order
                struct Student temp = students[j];
                students[j] = students[j + 1];
                students[j + 1] = temp;
            }
        }
    }
}

int main() {
    int numStudents;

    printf("Enter the number of students: ");
    scanf("%d", &numStudents);

    // Create a dynamic array to store the student database
    struct Student *database = (struct Student *)malloc(numStudents * sizeof(struct Student));

    // Input details for each student
    for (int i = 0; i < numStudents; i++) {
        printf("Enter details for student %d:\n", i + 1);
        printf("Roll Number: ");
        scanf("%d", &database[i].rollNumber);

        printf("Name: ");
        scanf("%s", database[i].name);

        printf("Percentage: ");
        scanf("%f", &database[i].percentage);

        printf("\n");
    }

    // Perform Bubble Sort to arrange the students based on percentage
    bubbleSort(database, numStudents);

    // Print the details of the first ten toppers
    printf("Top Ten Toppers:\n");
    for (int i = 0; i < 10 && i < numStudents; i++) {
        printf("Rank %d:\n", i + 1);
        printf("Roll Number: %d\n", database[i].rollNumber);
        printf("Name: %s\n", database[i].name);
        printf("Percentage: %.2f\n", database[i].percentage);
        printf("\n");
    }

    // Free the dynamically allocated memory
    free(database);

    return 0;
}
